{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akf\\\\react\\\\multipage\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({message:\"Could not fetch events.\"}),{status:500})\n    return json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","json","useLoaderData","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/akf/react/multipage/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\r\n\r\nimport { json, useLoaderData } from \"react-router-dom\";\r\n\r\nfunction EventsPage() {\r\n    const data = useLoaderData();\r\n    const events = data.events;\r\n    return <EventsList events={events} />;\r\n}\r\n\r\nexport  default EventsPage;\r\nexport async function loader(){\r\n    const response = await fetch(\r\n        \"http://localhost:8080/events\"\r\n    );\r\n\r\n    if (!response.ok) {\r\n        // throw new Response(JSON.stringify({message:\"Could not fetch events.\"}),{status:500})\r\n        return json({message:\"Could not fetch events.\"},{status:500});\r\n    } else {\r\n        return response;\r\n    }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AAEjD,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGL,aAAa,CAAC,CAAC;EAC5B,MAAMM,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,oBAAOJ,OAAA,CAACJ,UAAU;IAACQ,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC;AAACN,EAAA,CAJQD,UAAU;EAAA,QACFH,aAAa;AAAA;AAAAW,EAAA,GADrBR,UAAU;AAMnB,eAAgBA,UAAU;AAC1B,OAAO,eAAeS,MAAMA,CAAA,EAAE;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,8BACJ,CAAC;EAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA,OAAOhB,IAAI,CAAC;MAACiB,OAAO,EAAC;IAAyB,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACjE,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAAC,IAAAF,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}